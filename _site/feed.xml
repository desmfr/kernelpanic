<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kernel Panic</title>
    <description>blog de francois desmier</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 22 Jul 2017 22:45:37 +0200</pubDate>
    <lastBuildDate>Sat, 22 Jul 2017 22:45:37 +0200</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Mon mediacenter de Arch à Z</title>
        <description>&lt;p&gt;Pour se monter un mediacenter aujourd’hui, on a l’embarras du choix des solutions clé en main (aka je sais pas ce que je fais mais ça marche) avec des trucs comme open-elec sur Raspberry, Plex etc.&lt;/p&gt;

&lt;p&gt;Mais justement si on veut comprendre un peu ce qui se passe et comment ça marche, je trouve ça plutôt cool de se l’installer soit même son mediacenter.&lt;/p&gt;

&lt;h2&gt;La base&lt;/h2&gt;

&lt;p&gt;Pour ce faire on partira sur la stack suivante:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;hardware : Un Raspberry Pi2 et un disque dur usb2 externe (gros stockage pour pas cher et pas de besoin de perfs)&lt;/li&gt;
  &lt;li&gt;Distribution Linux : Archlinux ARMv7 (la version qui va bien pour le Pi2)&lt;/li&gt;
  &lt;li&gt;Mediacenter : &lt;em&gt;Kodi 17&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Make it&lt;/h2&gt;

&lt;h3&gt;1 On flash une carte micro SD&lt;/h3&gt;

&lt;p&gt;Pour préparer la carte micro SD (de préférences une classe 10, 8Go suffisent mais à on est large et à l’aise à partir de 16), on peut le faire en ligne de commande mais moi j’ai usé de &lt;a href=&quot;http://gparted.org/&quot;&gt;GParted&lt;/a&gt; (j’use beaucoup de GParted dans ma vie).&lt;/p&gt;

&lt;p&gt;Il faut créer deux partitions, une première en FAT32 (oué oué en FAT32) de 512 Mo, et la deuxième en EXT4 (\o/) qui prend toute la place qui reste. On tag la première &lt;code class=&quot;highlighter-rouge&quot;&gt;boot&lt;/code&gt; et la seconde &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; (si si ca simplifie la vie ensuite).&lt;/p&gt;

&lt;p&gt;On se retrouve donc ainsi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/dev/mmcblk1p1 - FAT32 - boot - 512Mo&lt;/li&gt;
  &lt;li&gt;/dev/mmcblk1p2 - EXT4 - root - le reste des Mo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maintenant on va créer les points de montage &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt/boot&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt/root&lt;/code&gt; (faudra passer en &lt;em&gt;root&lt;/em&gt; à ce moment là)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /mnt
mkdir boot root&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Puis on y monte les deux partitions dans le carte&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mount /dev/mmcblk1p1 boot
mount /dev/mmcblk1p2 root&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On récupère la &lt;a href=&quot;http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-2-latest.tar.gz&quot;&gt;dernière version d’Archlinux ARMv7 disponible&lt;/a&gt; et on l’extrait dans le dossier &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;bsdtar -xpf ArchLinuxARM-rpi-2-latest.tar.gz -C root
sync&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Il faut bien penser au &lt;code class=&quot;highlighter-rouge&quot;&gt;sync&lt;/code&gt; car les cartes micro SD sont taquines. Il faut d’ailleurs pas hésiter à répeter cette opération dès qu’on écrit dessus.&lt;/p&gt;

&lt;p&gt;On déplace le contenur du dossier &lt;code class=&quot;highlighter-rouge&quot;&gt;./root/boot&lt;/code&gt; dans &lt;code class=&quot;highlighter-rouge&quot;&gt;./boot&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mv root/boot/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; boot
sync&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et voilà on est prêt à faire booter le Pi2 sur notre carte micro SD avec Archlinux dessus ;) Tout cette première étape est en fait détaillée &lt;a href=&quot;https://archlinuxarm.org/platforms/armv7/broadcom/raspberry-pi-2&quot;&gt;ici&lt;/a&gt; avec les lignes de commandes pour créer les partitions.&lt;/p&gt;

&lt;p&gt;Mais avant de démonter nos deux partitions pour récupérer la carte, on peut profiter du moment pour apporter nos premières modifs au système :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;On size comme il faut la mémoire vidéo du Pi2 en lui allouant 512Mo (on peut faire avec moins aussi) en modifiant le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;./boot/config.txt&lt;/code&gt; comme ceci : gpu_mem=512&lt;/li&gt;
  &lt;li&gt;On peut également déjà mettre à jour le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt; pour automatiser le montage de notre disque usb externe en rajoutant des lignes du style :&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# /dev/sdaX LABEL=Media&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;UUID-DE-LA-PARTITION /mon/chemin/de/montage ext4 rw,relatime,data&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ordered 0 2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On oublie pas le petit sync des familles et on peut maintenant démonter notre carte micro SD.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sync &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; umount boot root&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3&gt;2 on fait booter le Pi2 sur la carte micro SD&lt;/h3&gt;

&lt;p&gt;On insère donc la carte dans le Pi2 et on démarre dessus. On a un système Archlinux vierge, on peut s’y connecter avec les users par défaut &lt;em&gt;alarm&lt;/em&gt; (mot de passe &lt;em&gt;alarm&lt;/em&gt;) et &lt;em&gt;root&lt;/em&gt; (mot de passe &lt;em&gt;root&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Alors on s’y connecte, en &lt;em&gt;root&lt;/em&gt; tant qu’on y est, et on se dépêche de changer le mot de passe!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;passwd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Là c’est le moment on fait quelques bidouilles pour se mettre bien :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;on choisit notre hostname, pour moi c’est arch-pi2&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;arch-pi2 &amp;gt; /etc/hostname&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;on cale le fuseau horaire&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#rm /etc/localtime avant si conflit&lt;/span&gt;
ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;On va décommenter notre petite ligne &lt;em&gt;fr_FR.UTF-8 UTF-8&lt;/em&gt; dans le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/locale.gen&lt;/code&gt; puis on balance les locales et la keymap&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;locale-gen
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LANG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fr_FR.UTF-8&quot;&lt;/span&gt; &amp;gt; /etc/locale.conf
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;KEYMAP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;fr &amp;gt; /etc/vconsole.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;On init NTP, parce que c’est comme ça (en vrai ca va servir ensuite quand on voudra partager nos films et notre musique sur notre réseau local)&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;timedatectl &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-ntp &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(on peut retrouver tout ça plus en détail sur le &lt;a href=&quot;https://wiki.archlinux.fr/Installation&quot;&gt;wiki Archlinux&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Là on peut rebooter pour bien checker que tout démarre sans erreur et que nos modifs sont bien prises en compte (un petit &lt;code class=&quot;highlighter-rouge&quot;&gt;sync&lt;/code&gt; avant le reboot ça mange pas de pain)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sync &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sync &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sync &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On se reconnecte en &lt;em&gt;root&lt;/em&gt; avec notre nouveau mot de passe et on balance un mise à jour globale du système :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pacman -Syu&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Déjà on va faire le ménage en supprimant le user par défaut &lt;em&gt;alarm&lt;/em&gt; et en créant le notre :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;useradd -g users -G wheel -m moi
passwd moi
userdel alarm
rm -rf /home/alarm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Puis on se fait plaisir en donnant à son user un shell qui roxx de la licorne (étape très facultative)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pacman -Sy fish
chsh -s /usr/bin/fish moi&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3&gt;3 Voilà le mediacenter!&lt;/h3&gt;

&lt;p&gt;Toujours connecté en &lt;em&gt;root&lt;/em&gt;, on peut enfin installer Kodi, notre mediacenter (le deuxième paquet &lt;code class=&quot;highlighter-rouge&quot;&gt;libcec-rpi&lt;/code&gt; sert à ce que la télécommande native de votre télé puisse piloter le mediacenter)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pacman -Sy kodi-rbp libcec-rpi&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Là on se déconnecte de &lt;em&gt;root&lt;/em&gt; pour se reconnecter avec son user, et on peut lancer &lt;code class=&quot;highlighter-rouge&quot;&gt;kodi&lt;/code&gt;, le tour est joué! Il ne vous reste plus qu’à définir dedans vos sources de fichiers pour construire votre médiathèque.&lt;/p&gt;

&lt;h3&gt;4 Et si on partageait nos dossiers média à nos autres devices?&lt;/h3&gt;

&lt;p&gt;Easy, on va installer nfs!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pacman -Sy nfs-utils&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;De là on édite le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/exports&lt;/code&gt; en ajoutant nos partages, avec des lignes dans ce genre :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/mon/chemin/de/montage/local 192.168.1.1/24&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,insecure,anonuid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1000,anongid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;100,no_subtree_check&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On démarre maintenant le démon nfs et on l’active au boot&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;nfs-server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Si votre démon run déjà, vous pouvez charger votre nouvelle conf avec&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;exportfs -rav&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Vos filesystems partagés sont désormais accesibles via vos autres devices clients nfs :) Notez que sur android il faut avoir rooté son matos pour pouvoir lire les partages nfs :/&lt;/p&gt;

&lt;p&gt;La config nfs est assez obscure, vous trouverez des infos &lt;a href=&quot;https://wiki.archlinux.fr/NFS&quot;&gt;ici&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;5 Et après?&lt;/h3&gt;
&lt;p&gt;Kodi tourne sans installer &lt;code class=&quot;highlighter-rouge&quot;&gt;xorg-server&lt;/code&gt; explicitement, mais n’éhsitez pas à le faire si vous voulez approfondir les bidouilles (&lt;a href=&quot;https://wiki.archlinux.fr/Xorg&quot;&gt;doc ici&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;à bientôt :)&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Jul 2017 12:21:19 +0200</pubDate>
        <link>http://localhost:4000/linux/2017/07/22/arch-pi-kodi.html</link>
        <guid isPermaLink="true">http://localhost:4000/linux/2017/07/22/arch-pi-kodi.html</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Gnome-shell extensions : ma séléction</title>
        <description>&lt;h2&gt;Gnome-shell&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.gnome.org/Projects/GnomeShell&quot;&gt;&lt;strong&gt;Gnome-shell&lt;/strong&gt;&lt;/a&gt; est un environnement de bureau pour Linux, très ergonomique, léger, customisable, et beau… et aujourd’hui carrément stable, en plus. Je l’utilise pour ma part sous &lt;a href=&quot;https://archlinux.fr/&quot;&gt;Archlinux&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.gnome.org/Projects/GnomeShell&quot;&gt;&lt;strong&gt;Gnome-shell&lt;/strong&gt;&lt;/a&gt; a la particularité de proposer un &lt;a href=&quot;https://extensions.gnome.org/&quot;&gt;catalogue d’extensions&lt;/a&gt; consultables et installables directement depuis votre navigateur (utilisateur de Chrome/Chromium, le plugin du site n’est pas supporté, pour aller au plus simple : utiliser Firefox pour vous y rendre, ou sinon aller télécharger les archives sur GitHub et installer les à coups de clics avec &lt;em&gt;gnome-tweeak-tool&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;On y trouve un peu de tout, beaucoup de gadget sans grand intérêt, mais aussi de petites pépites et c’est quelques unes de celle ci que je vais vous présenter (la qualification de pépite relevant bien évidemment de mon entière subjectivité).&lt;/p&gt;

&lt;h2&gt;Les extensions qui vont bien&lt;/h2&gt;

&lt;p&gt;J’ai donc présélectionné quatre d’entre elles, en esquivant volontairement les incontournables (&lt;em&gt;Docker Status&lt;/em&gt;, &lt;em&gt;Proxy switcher&lt;/em&gt;, &lt;em&gt;Dash to dock&lt;/em&gt;, &lt;em&gt;Activities configurator&lt;/em&gt;…).&lt;/p&gt;

&lt;h3&gt;Drop down terminal&lt;/h3&gt;
&lt;p&gt;Avoir un shell à porter de main pour lancer une commande en speed, un &lt;code class=&quot;highlighter-rouge&quot;&gt;yaourt -Syua&lt;/code&gt;, un &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl status tor&lt;/code&gt; ou que sais-je… Pratique non?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://pix.blizzart.net/image/1477331453/original.jpg&quot; alt=&quot;Drop down terminal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Accessible en une touche (configurable), &lt;em&gt;Drop down terminal&lt;/em&gt; est là pour ça. Aussitôt pressée (la touche) qu’un terminal descend du ciel, enfin de votre barre des tâches, et s’offre à vous.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zzrough/gs-extensions-drop-down-terminal&quot;&gt;Sur GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Windows blur effect&lt;/h3&gt;

&lt;p&gt;Si comme moi vous errez sur votre poste de travail avec de multiples applications ouvertes, rarement en plein écran, vos yeux sauront dire merci à cette extension.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://pix.blizzart.net/image/1477331709/original.jpg&quot; alt=&quot;Windows blur effect&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Windows blur effect&lt;/em&gt; a pour particularité de flouter et d’assombrir (à votre guise via les paramètres depuis &lt;em&gt;gnowe-tweak-tool&lt;/em&gt; bien sûr) les fenêtres en arrière plan. Très reposant, et assez sexy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lviggiani/gnome-shell-extension-wbe&quot;&gt;Sur GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Services systemd&lt;/h3&gt;

&lt;p&gt;Cette extension est moins tape à l’oeil, mais très pratique pour relancer ou stopper des services en un clic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://pix.blizzart.net/image/1477332125/original.jpg&quot; alt=&quot;Services systemd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On accède directement via une icône placé dans la barre des tâches à une liste de services à définir nous même via les paramètres. Bien entendu un mot de passe vous sera demander si vous n’êtes pas connecté en root sur votre interface graphique.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/petres/gnome-shell-extension-services-systemd&quot;&gt;Sur GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Archlinux update indicator&lt;/h3&gt;

&lt;p&gt;Une extension exclusive à &lt;a href=&quot;https://archlinux.fr/&quot;&gt;Archlinux&lt;/a&gt;, un indicateur des mises à jour disponibles (comme son nom l’indique oui) permettant un coup d’œil rapide à l’état de son système.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://pix.blizzart.net/image/1477332314/original.jpg&quot; alt=&quot;Archlinux update indicator&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On peut paramétrer le gestionnaire de paquets utilisé et les commandes induites.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/RaphaelRochet/arch-update&quot;&gt;Sur GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Nov 2016 19:21:19 +0100</pubDate>
        <link>http://localhost:4000/linux/2016/11/24/Gnome-shell-extensions.html</link>
        <guid isPermaLink="true">http://localhost:4000/linux/2016/11/24/Gnome-shell-extensions.html</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Watch face : All about squares</title>
        <description>&lt;h2&gt;Forerunner 235&lt;/h2&gt;

&lt;p&gt;Etant obligé de recoller soigneusement le bracelet de ma vieille &lt;strong&gt;Forerunner 10&lt;/strong&gt; avant chaque utilisation, j’ai pris la décision courageuse de renouveler mon équipement… J’ai donc fait l’acquisition chez &lt;em&gt;EvilCorp&lt;/em&gt; d’une Garmin &lt;strong&gt;Forerunner 235&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Plein d’options bullshit aussitôt désactivées (tracker de pas, notifications du téléphone…) me voilà avec une montre bien sympathique, un capteur cardiaque au poignet plutôt efficace, un bel écran ou je peux définir exactement ce que j’ai envie d’y voir… Mais il me manquait encore la petite touche perso, la petite customisation de derrière les fagots, le détail geek qui change tout… et je l’ai trouvé sur &lt;strong&gt;Connect IQ&lt;/strong&gt;, la plateforme d’apps de &lt;strong&gt;Garmin&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;All about squares&lt;/h2&gt;

&lt;p&gt;Il s’agit donc d’une “watch face” &lt;a href=&quot;https://apps.garmin.com/fr-FR/apps/bf16deb2-8fb0-466b-8a34-a568470cd974&quot;&gt;All About Squares&lt;/a&gt;, autrement dit d’une forme de cadran pour afficher l’heure de façon un peu originale et… so geek!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://services.garmin.com/appsLibraryBusinessServices_v0/rest/apps/bf16deb2-8fb0-466b-8a34-a568470cd974/icon/7bf94e69-12d3-4a1c-975d-020850e5e5d9&quot; alt=&quot;all about squares&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Voici comment on doit lire et interpréter cet écran somme toute magnifique:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La colonne grise la plus à gauche : le niveau de la batterie&lt;/li&gt;
  &lt;li&gt;Le bloc principal de gauche (colonne violette/bleue) : les heures&lt;/li&gt;
  &lt;li&gt;Le bloc principal de droite (colonne verte/orange) : les minutes par paquet de 5&lt;/li&gt;
  &lt;li&gt;La colonne blanche la plus à droite : les minutes à l’unité&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sur l’image exemple il est donc 8h56… vous suivez? :)&lt;/p&gt;

&lt;p&gt;Mais si!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;6 violets + 2 bleus = 8 heures&lt;/li&gt;
  &lt;li&gt;6 verts (x 5 minutes) + 5 oranges (x 5 minutes) + 1 unité de minute = 30 + 25 +1 = 56 minutes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Allez on file sur un deuxième exemple…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/BnW0wWnogByhEiLTzFRJOoEcF0_CAPhpoSupoDACieGB3cnu92cohBg76Pj1-HdGd26B-F8psAO1YLiqqIhti3ma7cIwuKlCWB7i7q_knixZw8ppo4RDGHL5zjlu1N5hMkg2jmUTsdr2p0FRN1azYxsFAYLEh3dKpgSV7b-hB37j4cfB9pWHKQy8aPnyuH7sY-E1P9JpvdR_7Bg8ZNfIqE4Krk-CVZswKSS9bQS6ePUrGVLP7qEWwCGlp9he_5bOmh967DuPuWf8ltNdXaYaQM-bSNM_6ILb-aJYIMM1tm-TlmEarCFVUxOvaJe-IiD63UI1GIjtLSgShFd_eCW-liz0t5ui2waILvlmPCejSuMV9TmS7ueVJN5f-Tpzt9UE0eo1GRMa2D0J99UUWQ7taDgD-Y_71-zX-Do6ky2LjleACG_zubBqbZ71MgSVfzI8jPB8-bGE45-SS39PXR4ZspYChqjQIQJOfVWdlaapHaqnRAv99jy2WZX7RUKZRLfuZa3FAhFbtbcquiJGat3UZMJmrz_RSMTjp-RmiKP7iGV--8khLFXZfqK3eb4A2rw7JwQHyu2KgsplDOzIyR4Lkm4W0_7P4nl9HTVGw_un15BBfqRi=w469-h833-no&quot; alt=&quot;ma montre&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il est donc… 11h16 (easy!!).&lt;/p&gt;

&lt;p&gt;Tout ça paraît un peu voir complètement useless, mais c’est le détail qui change tout. On s’habitue très vite à lire l’heure ainsi, c’est juste beau, original et terriblement geek.&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Oct 2016 12:03:19 +0200</pubDate>
        <link>http://localhost:4000/running/2016/10/23/watch-face.html</link>
        <guid isPermaLink="true">http://localhost:4000/running/2016/10/23/watch-face.html</guid>
        
        
        <category>running</category>
        
      </item>
    
  </channel>
</rss>
